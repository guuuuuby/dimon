name: Build and release new version
run-name: Building (${{ github.event_name }} by ${{ github.actor }})
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  Create-Pyinstaller-Build:
    name: Create build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Enable caching and define a custom cache key suffix
        id: setup-uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Create PyInstaller executable
        run: uv run pyinstaller guby.spec

      - name: Upload build to storage
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: dist/*

  Upload-Release:
    name: Upload release
    runs-on: ubuntu-latest
    needs:
      - Create-Pyinstaller-Build

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: windows-build
          path: dist/

      - name: Download Linux build
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-build
          path: dist/

      - name: Download MacOS build
        uses: actions/download-artifact@v3
        with:
          name: macos-build
          path: dist/

      - name: Display all files
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          fail_on_unmatched_files: true
